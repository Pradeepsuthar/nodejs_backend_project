let mongoose,APP_URL;_d00‍.x([["default",()=>_d00‍.o]]);_d00‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_d00‍.w("../config",[["APP_URL",["APP_URL"],function(v){APP_URL=v}]]);
const Schema = mongoose.Schema;


const productSchema = new Schema({
    title: { type: String, required: true },
    subTitle: { type: String, required: true },
    mrpPrice: { type: Number, default: 0 },
    salePrice: { type: Number, default: 0 },
    offer: { type: Number, default: 0 },
    isAvailable: { type: Boolean, default: false },
    image: {
        type: String,
        required: true,
        get: (image) => {
            // http://localhost:5000/uploads/1616443169266-52350494.png
            if (process.env.ON_HEROKU == 'true') {
                return `${image}`;
            }
            return `${APP_URL}/${image}`;
        },
    },
}, { timestamps: true, toJSON: { getters: true }, id: false });

_d00‍.d(mongoose.model('Product', productSchema, 'products'));